
public class oneplayer {

	int board[];
	int mcounter; 
	
	public oneplayer()
	{
		board = new int[9]; 
		for(int i = 0; i<9; i++)
		{
			board[i]=0; 
		}
	}
	
	public int[] getBoard()
	{
		return board; 
	}
	
	public int checkState()
	{
		int winState = 0; 
		if(board[0]!=0 && board[0]==board[1] && board[1]==board[2] || 
				board[0]!=0 && board[0]==board[4] && board[4]==board[7] || 
				board[0]!=0 && board[0]==board[5] && board[5]==board[9] || 
				board[5]!=0 && board[5]==board[2] && board[2]==board[8] || 
				board[5]!=0 && board[5]==board[4] && board[4]==board[6] || 
				board[5]!=0 && board[5]==board[3] && board[3]==board[7] || 
				board[9]!=0 && board[9]==board[6] && board[6]==board[3] || 
				board[9]!=0 && board[9]==board[8] && board[8]==board[7])
		{
			if(mcounter%2==0)
			{
				winState = 1 ; 
			}
			else if(mcounter%2 ==1)
			{
				winState = 2; 
			}
		
		}
		
		
		return winState; 
	}
	
	public int playerMove(int n)
	{
		
		if(board[n]==0)
		{
			if(mcounter%2==0)
			{
				board[n] = 1; 
				//mcounter++; 
			}
			
			else if(mcounter%2!=0)
			{
				board[n] = 2; 
				//mcounter++; 
			}
			
		}
		int i = checkState(); 
		mcounter++; 
		return i; 
		
		
	}
	
	public int compMove()
	{
		//int win = 0; 
		for(int i = 0; i < 9; i++)
		{
			if (board[i]==0)
			{
				board[i]=2; 
				//if(checkState()==1) board[i]=0; 
				if(checkState()==2) 
				{
					break;
				}
				else if(checkState()==0) 
				{
					if(compMove()==1)
					{
						board[i] = 0; 
						break;
					}
					else if(compMove()==0)
					{
						break; 
					}
				}
				else break;
					
			}
			
		}		

		int k = checkState(); 
		return k; 
		}
	
	
}
